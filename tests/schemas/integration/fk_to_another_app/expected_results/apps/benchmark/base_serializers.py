# ########################################################### #
# This file is automatically generated. Please don't edit it! #
# ########################################################### #

from django.utils.translation import gettext_lazy as _
from rest_framework import serializers

from pik.api.lazy_field import LazyField
from pik.api.serializers import StandardizedModelSerializer

from . import base_models


class BaseBenchmarkCatalogObjectHeaderSerializer(StandardizedModelSerializer):
    _help_text = 'Тестовый справочник'
    deleted = serializers.DateTimeField(label=_('Дата деактивации'), help_text=_('Дата деактивации / пометки на удаление объекта в Мастер-системе по UTC в формате ISO'), allow_null=True)
    valid_object_guid = serializers.UUIDField(label=_('guid объекта - эталона'), help_text=_('guid объекта - эталона. Заполнен для объектов-дублей'), allow_null=True)
    valid_object_type = serializers.CharField(label=_('type объекта - эталона'), help_text=_('type объекта - эталона. Заполнен для объектов-дублей'), allow_blank=True, allow_null=True, max_length=255)
    string_field = serializers.CharField(label=_('Строка'), help_text=_("Пример значения 'string'"), allow_blank=True, allow_null=True, max_length=150)
    string_uuid = serializers.UUIDField(label=_('Уникальный идентификатор'), help_text=_("Пример значения 'string', формат 'uuid'"), allow_null=True)
    string_date_time = serializers.DateTimeField(label=_('Дата и время'), help_text=_("Пример значения 'string', формат 'date-time'"), allow_null=True)
    string_date = serializers.DateField(label=_('Дата'), help_text=_("Пример значения 'string', формат 'date'"), allow_null=True)
    number_field = serializers.DecimalField(label=_('Число'), help_text=_("Пример значения 'number'"), allow_null=True, max_digits=17, decimal_places=4, min_value=-1000000000000, max_value=1000000000000)
    decimal_field = serializers.DecimalField(label=_('Десятичное число'), help_text=_("Пример значения 'number', формат 'decimal'"), allow_null=True, max_digits=17, decimal_places=4, min_value=-1000000000000, max_value=1000000000000)
    integer_field = serializers.IntegerField(label=_('Целое число'), help_text=_("Пример значения 'integer'"), allow_null=True, min_value=-1000000000000, max_value=1000000000000)
    is_boolean = serializers.BooleanField(label=_('Булево'), help_text=_("Пример значения 'boolean'"), allow_null=True)
    enum_string = serializers.ChoiceField(label=_('Перечисление(Строка)'), help_text=_("Пример значения 'enum+string'"), allow_blank=True, allow_null=True, choices=base_models.BaseBenchmarkCatalogObjectHeader.ENUM_STRING_CHOICES)
    enum_integer = serializers.ChoiceField(label=_('Перечисление(Целое число)'), help_text=_("Пример значения 'enum+integer'"), allow_blank=True, allow_null=True, choices=base_models.BaseBenchmarkCatalogObjectHeader.ENUM_INTEGER_CHOICES)
    hash = serializers.CharField(label=_('Хеш сумма'), help_text=_("Хеш сумма 'Строка'(SHA512)"), allow_blank=True, allow_null=True, max_length=1000)
    encrypted = serializers.CharField(label=_('Зашифрованное значение'), help_text=_("Зашифрованное значение 'Строка'(RSA)"), allow_blank=True, allow_null=True, max_length=1000)
    comment = serializers.CharField(label=_('Комментарий'), help_text=_('Комментарий'), allow_blank=True, allow_null=True, max_length=256)

    default_restql_query = {'include': [
        '*',
    ], 'exclude': [], 'arguments': {}, 'aliases': {}}

    class Meta:
        fields = ['guid', 'type', 'created', 'updated', 'deleted', 'valid_object_guid', 'valid_object_type', 'string_field', 'string_uuid', 'string_date_time', 'string_date', 'number_field', 'decimal_field', 'integer_field', 'is_boolean', 'enum_string', 'enum_integer', 'hash', 'encrypted', 'comment']

# ########################################################### #
# This file is automatically generated. Please don't edit it! #
# ########################################################### #
from decimal import Decimal

from model_utils import Choices
from django.conf import settings
from django.core.validators import MinValueValidator, MaxValueValidator
from django.db import models
from django.utils.translation import gettext_lazy as _

from pik.core.models import BasePHistorical


class BaseDevelopmentCatalogObjectTable(BasePHistorical):
    _help_text = 'Запись табличной части, тестового справочника'
    _is_history_enabled = getattr(settings, 'MDM_MODELS_HISTORY_ENABLED', False)
    uid = models.UUIDField(verbose_name=_('Guid'), help_text=_('Globally Unique Identifier — статистически уникальный 128-битный идентификатор. Записывается в виде строки из 32 шестнадцатеричных цифр, разбитых на группы дефисами. Формируется на стороне Мастер-системы'), db_column='guid' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, primary_key=True)
    created = models.DateTimeField(verbose_name=_('Дата создания'), help_text=_('Дата создания объекта в Мастер-системе по UTC в формате ISO'), blank=True, null=True, default=None, editable=False, db_column='created' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, db_index=True)
    updated = models.DateTimeField(verbose_name=_('Дата обновления'), help_text=_('Дата обновления объекта в Мастер-системе по UTC в формате ISO'), blank=True, null=True, default=None, editable=False, db_column='updated' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, db_index=True)
    deleted = models.DateTimeField(verbose_name=_('Дата деактивации'), help_text=_('Дата деактивации / пометки на удаление объекта в Мастер-системе по UTC в формате ISO'), blank=True, null=True, default=None, editable=False, db_column='deleted' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, db_index=True)
    valid_object_guid = models.UUIDField(verbose_name=_('guid объекта - эталона'), help_text=_('guid объекта - эталона. Заполнен для объектов-дублей'), blank=True, null=True, default=None, editable=False, db_column='validObjectGuid' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None)
    valid_object_type = models.CharField(verbose_name=_('type объекта - эталона'), help_text=_('type объекта - эталона. Заполнен для объектов-дублей'), blank=True, null=True, default=None, editable=False, db_column='validObjectType' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, max_length=255)
    header = models.ForeignKey(verbose_name=_('Головной объект (шапка)'), help_text=_('Головной объект (шапка)'), blank=True, null=True, default=None, editable=False, db_column='headerGUID' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, to='benchmark.BenchmarkCatalogObjectHeader', on_delete=models.CASCADE, related_name='developmentcatalogobjecttable_header')
    line_number = (models.BigIntegerField if getattr(settings, 'MDM_MODELS_BIGINT_ON', False) else models.IntegerField)(verbose_name=_('Номер строки'), help_text=_('Номер строки'), blank=True, null=True, default=None, editable=False, db_column='lineNumber' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, validators=[MinValueValidator(-1000000000000), MaxValueValidator(1000000000000)])
    string_field = models.CharField(verbose_name=_('Строка'), help_text=_("Пример значения 'string'"), blank=True, null=True, default=None, editable=False, db_column='stringField' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None, max_length=150)
    string_date_time = models.DateTimeField(verbose_name=_('Дата и время'), help_text=_("Пример значения 'string', формат 'date-time'"), blank=True, null=True, default=None, editable=False, db_column='stringDateTime' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None)

    class Meta:
        verbose_name = _('Запись таблицы')
        verbose_name_plural = _('Запись табличной части')
        abstract = True
        db_table = 'DevelopmentCatalogObjectTable' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None

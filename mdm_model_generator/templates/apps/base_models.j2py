# ########################################################### #
# This file is automatically generated. Please don't edit it! #
# ########################################################### #
from decimal import Decimal

from model_utils import Choices
from django.conf import settings
from django.core.validators import MinValueValidator, MaxValueValidator
from django.db import models
from django.utils.translation import gettext_lazy as _

from pik.core.models import BasePHistorical


{% for name, definition in definitions.items() %}
class Base{{name}}(BasePHistorical):
    {% if definition.description %}
    _help_text = '{{ definition.description.replace("'", "\\'") }}'
    {% endif %}
    _is_history_enabled = getattr(settings, 'MDM_MODELS_HISTORY_ENABLED', False)
    {% if definition.get("properties", {}).get("version") %}
    autoincrement_version = False
    {% endif %}
    {% for choices_name, args in (definition|to_choices).items() %}
    {{ choices_name }} = Choices({{ args }})
    {% endfor %}
    {% for prop_name, property in definition.get("properties", {}).items() %}
    {% if prop_name|to_field_name != 'type' %}
    {{ prop_name|to_field_name }} = {{ property|to_model_field(prop_name, name, tag_groups, app, definition.required) }}
    {% endif %}
    {% endfor %}

    class Meta:
        {% if definition.title %}
        verbose_name = _('{{ definition.title.replace("'", "\\'") }}')
        {% endif %}
        {% if definition.get("x-title-plural") %}
        verbose_name_plural = _('{{ definition.get("x-title-plural").replace("'", "\\'") }}')
        {% endif %}
        abstract = True
        db_table = '{{name}}' if getattr(settings, 'MDM_MODELS_CAMEL_CASE', False) else None
{% if not loop.last %}


{% endif %}
{% endfor %}
